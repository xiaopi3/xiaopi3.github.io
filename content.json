[{"title":"测试页面","date":"2020-03-11T13:35:49.000Z","path":"archives/af935060.html","text":"测试页面lalala","tags":[{"name":"测试","slug":"测试","permalink":"https://xiaopi3.gitee.io/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"SpringBoott环境搭建","date":"2020-03-10T12:14:53.000Z","path":"archives/e5dfb256.html","text":"废话不多说，直接上 新建maven工程，选择空架构 在pom文件中做如下两步操作 a. 引入父工程起步依赖（所有springboot工程，都必须继承） &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.0.1.RELEASE&lt;/version&gt; &lt;/parent&gt; // 引入基础web起步依赖 &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;/dependencies&gt; b. 新建引导类（一般习惯写在main方法中，也可以单独写） /*** *spring需要一个标志来识别某个类为引导类，需要加上该注解！ */ @SpringBootApplication public class MySpringBootApplication { public static void main(String[]args) { /*** *这是一个引导类 *run方法是引导类入口，程序启动进入main方法，然后加载引导类 */ SpringApplication.run(MySpringBootApplication.class); } } 启动项目 此时无法看到页面但是项目已经正常运行起来了，为了更直观，我在这里写一个地址映射 Controller类编写 新建controller层，新建控制类，如QuickController编写一个任意方法 /*** *为了让Spring能识别，需要在这里标志为控制器 */ @Controller public class QuickController{ /*** *此方法为调用后返回字符串 *请求地址使用注解标志 *返回值类型使用注解标志 * ResponseBody标识按照Json串解析返回值 *@return字符串 */ @RequestMapping(&quot;/quick&quot;) @ResponseBody public String quick(){ return&quot;hello springboot!&quot;; } } 访问localhost:8080/quick即可看到返回值为hello Springboot!","tags":[{"name":"前端技术","slug":"前端技术","permalink":"https://xiaopi3.gitee.io/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"}]},{"title":"Hello World","date":"2020-03-09T12:53:37.086Z","path":"archives/4a17b156.html","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","tags":[{"name":"测试","slug":"测试","permalink":"https://xiaopi3.gitee.io/tags/%E6%B5%8B%E8%AF%95/"}]}]